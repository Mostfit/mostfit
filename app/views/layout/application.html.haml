!!! Strict
%html{ "xml:lang" => "en", :lang => "en", :xmlns => "http://www.w3.org/1999/xhtml" }
  %head
    %meta{ :content => "text/html; charset=utf-8", "http-equiv" => "content-type" }/
    %title
      = page_title_str = page_title
    %link{ :rel => "icon", :type => "image/ico", :href => "/favicon.ico" }/
    = css_include_tag :screen, :media => "screen, projection"
    = css_include_tag :print, :media => "print"
    /= css_include_tag :style, :media => "screen, projection"
    %link{:rel => "stylesheet/less", :type => "text/css", :href => "/stylesheets/style.less"}
    = css_include_tag :extra
    = css_include_tag "jquery-ui", :media => "screen, projection"
    = css_include_tag :chosen
    = js_include_tag :jquery, :application, :swfobject, "jquery.highlight.js", "jquery.floatheader.min.js", "jquery-ui.min.js", "chosen/chosen/chosen.jquery.js", "less.js"
  %body
    - if session.authenticated?
      .bookmark
        = form_for(Bookmark.new, :action => url(:controller => :bookmarks, :action => :system), :class => "_remote_", :onsubmit => "javascript: $('#bookmark_route').val(window.location.pathname+window.location.hash);") do
          = hidden_field :title, :value => page_title_str
          %input{:type => 'hidden', :name => "_target_", :value => "bookmark_form_container"}
          = hidden_field :name, :value => page_title_str
          = hidden_field :type, :value => :system
          = hidden_field :route, :value => :system
          = submit "Bookmarks"
    #bookmark_form_container
    #header
      %h1.logo
        -if mfi = Mfi.first
          %span{:style => "color: #{mfi.color||'green'};"}
            -if mfi.logo_name and not mfi.logo_name.blank?
              = image_tag("logos/#{mfi.logo_name}", :height => 50)
            -if mfi.name
              = mfi.name
            -else
              MOSTFIT
        -else
          MOSTFIT
      #green-header
        #navigation
          - if session.authenticated?
            = link_to_with_class('Home', url(:browse))
            = link_to_with_class('Data entry', url(:data_entry))
            = link_to_with_class('Admin', url(:admin))
            = link_to_with_class('Accounts', url(:accounts))
            = link_to_with_class('Dashboard', url(:dashboard))
            = link_to_with_class('Reports', url(:reports))
        #header_search_div
          %form._remote_{:action => '/search', :class => 'search', :method => "POST", :style => "float:left;", :id => "search-form"}
            %input{:name => 'query', :value => params[:query], :autocomplete => "off"}
            %input{:type => 'hidden', :name => '_target_', :value => "content p:first"}
    #breadcrums
      = breadcrumbs
      #login
        - if session.authenticated?
          =link_to 'change password', url(:change_password)
          |
          = current_user_info
        - else
          existing users can
          %b= link_to 'login', url(:login)
          to proceed
        - if count = DirtyLoan.pending.length and count > 0
          %i
            == (#{count} loans in queue)


    #content
      .container
        %p
        - if message
          #flash-messages.span-17.prefix-5.suffix-5.last            
            - message.each do |key, value|
              .flash{ :class => key.to_s }
                %p= value.gsub("\n", "<br/>")
        - if params[:action]=="edit" and session.user.admin?
          %p{:style => "float: right; border: 1px solid orange; padding: 4px;"}
            = link_to("Delete", url(:controller => "application", :action => "delete", :id => params[:id], :model => params[:controller], :return => request.uri), :class => 'delete')
        = catch_content :for_layout
    #footer
      %p{:style => "position: relative; right: 10%; float: right;"}
        - if session.authenticated? and session.user.role == :admin and Merb.env == "development"
          %form{:action => "/admin/proxy_logon", :methoid => :post}
            login as
            = select :user_id, :collection => User.all(:order => [:login]).map{|u| [u.id, u.login]}
            = submit "go"
      %p{:style => "position: relative; right: 10%; float: right;"}
        =image_tag("/images/mostfit_logo.png", :height => 80)
      == &copy; 2010 Intellecap &mdash; This software is released under the #{link_to 'GNU Affero General Public License', 'http://www.gnu.org/licenses/agpl.html'}.
