- models = DataMapper::Model.descendants.map{|d| d}
- if @objects.length>0
  - @page_no = (params[:page] or Nothing).to_i || 1
  - @per_page = (params[:per_page] or Nothing).to_i || 20
  - relations = @model.relationships.reject{|name, rel| rel.class!=DataMapper::Associations::ManyToOne::Relationship}.inject({}){|s,x| s+={x[1].child_key.collect{|y| y.name}.first => x[0]}}
  - model_names = constants_to_strings(@search.models)
  = partial("bookmarks/form", :bookmark_type => 'custom_reports', :name => params[:report_name])
  %div{:style => "padding-right: 25px;"}
    %h1
      - klass = @objects.first.class.ancestors.include?(Loan) ? "loan" : @objects.first.class.to_s.snake_case
      - if params[:report_name] and not params[:report_name].blank?
        = params[:report_name]
      - else
        = klass.camelcase
    .menu-strip
      %form{:action => "/searches/edit", :method => :post, :style => "margin-bottom: 0px;"}
        %input{:type => "hidden", :name => "parameters", :value => YAML::dump(params)}
        = submit "edit this report"
    -# = paginate_objects(@objects, params)
    %table.report.nojs
      %thead
        %tr
          - @field_order.keys.sort_by(&:to_i).each do |k|
            %th
              = @field_order[k].join(" ")
      - @rows.each do |r|
        %tr
          - @field_order.keys.sort_by(&:to_i).each do |k|
            %td
              - model = @field_order[k][0]
              - attr =  @field_order[k][1].to_sym
              = r[model][attr]
-else
  No records
