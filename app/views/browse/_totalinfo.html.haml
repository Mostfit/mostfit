%div.totalinfo
  %h1
    At one glance
  - lh = LoanHistory.sum_outstanding_for(Mfi)
  - lh = lh ? lh.first : nil
  .numbers
    .number
      = Branch.count
      %span.label
        branches
    .number
      = Center.count
      %span.label
        centers
    .number  
      = Client.count
      %span.label
        clients
    .number
      = (l = Loan.count(:disbursal_date.not => nil, :rejected_on => nil))
      %span.label
        loans
  %br
  %table
    %tr
      %td
        Active clients
      %td
        = lh.clients_count if lh
    %tr
      %td
        Attendance % 
      %td{:colspan => 3}
        - absent_count = Attendance.all(:status => "absent").count.to_f
        - total_count = Attendance.all.count.to_f
        - attendance = (1 - (absent_count/total_count))*100
        - if attendance > 0
          = (attendance).round(2)
        - else
          = "-"
    %tr
      %td
        Closed/repaid loans (number)
      %td{:colspan => 3}
        = (l - lh.loans_count) if lh
    %tr
      %td
        Loans disbursed (amount)
      %td{:colspan => 3}
        = Loan.all(:disbursal_date.not => nil, :rejected_on => nil).aggregate(:amount.sum).to_currency
    %tr
      %td
        Amount outstanding
      %td{:colspan => 3}
        = lh.actual_outstanding_principal.to_currency if lh
    %tr
      %td
        Receipts
      %td{:colspan => 3}
        %table
          %tr
            %td.text
              Principal
            %td.number
              - principal_repaid = Payment.all(:type => :principal).aggregate(:amount.sum) || 0
              = principal_repaid.to_currency 
          %tr
            %td.text
              Interest
            %td.number
              - interest = Payment.all(:type => :interest).aggregate(:amount.sum) || 0
              = interest.to_currency
          %tr
            %td.text
              Fees
            %td.number
              - fees = Payment.all(:type => :fees).aggregate(:amount.sum) || 0
              = fees.to_currency 
          %tr
            %td.text
              Total receipts
            %td.number
              = (principal_repaid + interest + fees).to_currency
    %tr
      %td
        Staff count
      %td
        = StaffMember.all(:active => true).count
    %tr
      %td
        Regions
      %td{:colspan => 3}
        = Region.count
    %tr
      %td
        Areas
      %td{:colspan => 3}        
        = Area.count

  %span.greytext{:style => "float: right"}
    as of yesterday
