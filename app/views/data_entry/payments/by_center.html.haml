:javascript
  function load_centers() {
    $("#paying_center_selector").html('');
    $.ajax({
      type: "GET",
      url: "/branches/centers/"+$("#paying_branch_selector").val()+"?paying=true&date=" + $("#for_date").val(),
      success: function(data){
        $("#paying_center_selector").html(data);
      }
    });
  }

  $(document).ready(function() {
    $("#paying_branch_selector").change(function(){
      load_centers();
    });
    $("#for_date").change(function(){
      load_centers();
    });
  });

- if @center and @date
  - @md = @center.meeting_day?(@date)
  %h1
    = link_to "Center #{@center.name}", resource(@center.branch, @center)
    = @date 
    - if @center
      (
      = Center.meeting_days[@date.wday]
      )

  - if not @errors.blank?
    .error
      - if @errors.is_a?(Array)
        - @errors.each do |error|
          == Loan <b>#{error.resource.class == Payment ? error.resource.loan.id : error.resource.id} :</b>
          = error.values.join("*")
          %br
      - else
        - @errors.each do |error|
          = error
          %br        
  %a{ :name => 'weeksheet' }
  %table.narrow.form{:style => "width: 100%"}
    %tr.odd
      %td meeting at
      %td
        - if @md
          %b== #{@date} #{@center.meeting_time}
        - else
          %i no meeting today
      %td
        = link_to 'today', url(:enter_payments, :action => 'by_center', :for_date => Date.today, :center_id => @center.id) + '#weeksheet'
        &nbsp;|&nbsp;
        = link_to 'previous meeting', url(:enter_payments, :action => 'by_center', :for_date => @center.previous_meeting_date_from(@date), :center_id => @center.id) + '#weeksheet'
        &nbsp;|&nbsp;
        = link_to 'next meeting', url(:enter_payments, :action => 'by_center', :for_date => @center.next_meeting_date_from(@date), :center_id => @center.id) + '#weeksheet'
    %tr
      %td center manager
      %td
        = link_to @center.manager.name, resource(@center.manager)
      %td
        %form{:action => url(:enter_payments, :action => 'by_center'), :method => 'GET', :style => 'margin: 0px; padding: 0px;'}
          = date_select 'for_date', @date
          = hidden_field :name => :center_id, :value => @center.id
          = submit 'Go!',  :style => 'margin: 0px; padding: 0px;'
  - fees_payable       = @fee_paying_things.values.inject({}){|s,x| s+=x}.length
  %div.tab_container
    %ul.tabs
      %li#repayments
        Repayments
        %b
          (
          = LoanHistory.all(:date => @date, :center => @center, :status => [:outstanding]).count
          )
      %li#repayments
        Approvals
        %b        
          = "(#{@loans_to_approve.size})"
      %li#dishbursals
        Disbursals
        %b
          = "(#{@loans_to_disburse.size})"
      %li#fees
        Fees payments
        %b
          = "(#{@fee_paying_things.values.reject{|v| v.empty?}.count})"
      %li#luc
        Loan utilization check 
        %b
          = "(#{@loans_to_utilize.size})"
    %div.tab    
      %h1 Repayments
      = form_for(@payment, :action => url(:enter_payments, :action => 'by_center', :return => params[:return] || (request.path + "?for_date=#{@date}&center_id=#{@center.id}")), :onsubmit => "if ($('#payments_received_by').val() != '#{@center.manager.id}'){return(confirm('Payment receiver is not center manager. Proceed with payments?'));};", :class => "_disable_button_") do
        /= hidden_field :name => 'for_date', :value => @date
        = hidden_field :name => 'center_id', :value => @center.id
        = partial :cds
        = submit 'Make Repayments'
    %div.tab
      %h1 Approvals
      - if @loans_to_approve.size > 0
        = form_for(@loan, :action => url(:loan_actions, 'approve', :return => (request.path + "?for_date=#{@date}&center_id=#{@center.id}")), :class => "_disable_button_") do
          = partial "loans/approve"
          = submit 'Approve these loans', :name => "approve_loans"
          or
          %a{:href => "#{url(:loan_actions, 'reject', :return => resource(@branch, @center))}", :class => "_rejection_button_"}
            Reject selected loans
      - else
        No approvals today
    %div.tab        
      %h1 Disbursal
      - if @loans_to_disburse.size > 0
        = form_for(@loan, :action => url(:loan_actions, :action => 'disburse', :return => (request.path + "?for_date=#{@date}&center_id=#{@center.id}#dishbursals")), :class => "_disable_button_") do
          = partial "loans/disburse", {:loans_to_disburse => @loans_to_disburse, :date => @date}
          = submit 'Disburse these loans', :name => "disburse_loans"
          or
          %a{:href => "#{url(:loan_actions, 'reject', :return => resource(@branch, @center))}", :class => "_rejection_button_"}
            Reject selected loans
      - else
        No disbursals today
    %div.tab
      %h1 Fees
      = form_for(@payment, :action => url(:enter_payments, :action => 'by_center', :return => request.path + "?for_date=#{@date}&center_id=#{@center.id}#fees"), :onsubmit => "javascript: return confirm_for({'received_by': #{@center.manager.id};", :class => "_disable_button_") do
        = hidden_field :name => :payment_type, :value => "fees"
        = hidden_field :name => 'center_id', :value => @center.id
        Fees collected by
        = select :name => "payment[received_by]", :collection => staff_members_collection, :selected => @center.manager.id.to_s, :id => 'fees_received_by'
        collected on
        = date_select :for_date, @date, :id => "fees_for_date"
        = submit 'Pay Fees'
        %table.report.nojs{:style => "width:100%"}
          %thead
            %tr{:style => "font-size: 0.85em"}
              %th
                id
              %th
                Client
              %th
                Loan
              %th
                Total Fees Payable
              %th
                Fees Already Paid
              %th
                Fees Due Today
              %th
                Fees      
          - @fee_paying_things.each do |obj, fee|
            - next if fee.size==0
            %tr{:class => cycle('odd','even')}
              %td
                = obj.id
              %td.text
                = obj.is_a?(Loan) ? link_to(obj.client.name, url_for_loan(obj)) : link_to(obj.name, resource(obj))
              %td.text
                = (link_to obj.description, url_for_loan(obj)) if obj.respond_to?("description")
              %td.text
                = obj.total_fees_due
              %td.text
                = obj.total_fees_paid
              %td.text
                - fee.each do |k,v|
                  ="#{k.name}: #{v}"
              %td
                - klass = Loan.descendants.include?(obj.class) ? Loan : obj.class
                = text_field :name => "paid[#{klass.to_s.snake_case}][#{obj.id}]", :value => fee.values.inject(0){|s,x| s+=x}, :cols => "5", :style => "width:50px;" 
          - frt = @center.clients.payments(:type => :fees, :received_on => @date)
          - unless frt.blank?
            %tr
              %td{:colspan => "20", :style => "text-align: center"}
                %b Fees paid today
          - frt.each do |f|
            %tr
              %td.number
              %td.text
                = link_to f.client.name, resource(f.client)
              %td.text
                = (link_to f.loan.description, url_for_loan(f.loan)) if f.loan
              %td.text
              %td.number
                = f.amount
              %td
              %td.text
                = f.fee.description
          %tr.total
            %td
            %td
              = frt.count
              fee payments
            %td
            %td
            %td
              = frt.aggregate(:amount.sum)
            %td
      - unless @fee_paying_things.values.inject({}){|s,x| s+=x}.length==0

        No fees due today

          
          
    %div.tab
      %h1 Insurance Premia
    %div.tab
      %h1 Loan Utilization Check
      - if @loans_to_utilize.size > 0
        = form_for(@loan, :action => url(:enter_loans, 'make_loan_utilization', :return => resource(@branch, @center)), :class => "_disable_button_") do
          = partial "data_entry/loans/make_loan_utilization"
          = submit "Loan Utilization", :name => "make LUC"
      - else
        No LUC pending
- else
  %h1  Choose a center to record a repayment for
  = form_for(@payment, :action => url(:enter_payments, :action => 'by_center'), :method => :get) do
    %table.form
      %tr
        %th
          For Date
        %td
          = date_select 'for_date', (@date || Date.today), {:id => 'for_date'}
          = hidden_field :name => 'return', :value => url(:data_entry)
      %tr
        %th
          In branch
        %td
          = select :name => 'branch_id', :id => "paying_branch_selector", :collection => Branch.all, :text_method => :name, :value_method => :id, :selected => params[:branch_id].to_s, :prompt => 'Select a branch'
      %tr
        %th
          Centers repaying today
        %td
          = select :name => 'center_id', :id => 'paying_center_selector', :collection => Center.all(:branch_id => params[:branch_id]), :text_method => :name, :value_method => :id, :selected => params[:center_id].to_s, :prompt => 'Select a center'
      %tr
        %td{:colspan => "2"}
          = submit 'Submit'
