- if @md
  Payments collected by 
  = select :name => "payment[received_by]", :collection => staff_members_collection, :selected => @center.manager.id.to_s, :id => 'payments_received_by', :class => "chosen"
  collected on
  = date_select "received_on", @date
  %table.report.nojs
    %thead
      %tr{:style => "font-size: 0.85em;"}
        %th name
        %th id
        %th amount
        %th outstanding
        %th disbursed on
        %th installment
        %th principal due
        %th interest due
        %th total due
        %th paid
        %th repay type
        %th attendance
          
    %tbody{:style => "text-align:left;" }
      - @branch||=@center.branch
      - tot_amount, tot_outstanding, tot_installments, tot_principal, tot_interest, tot_fees, tot_total = 0, 0, 0, 0, 0, 0, 0
      - clients = Client.all(:center_id => @center.id, :active => true, :date_joined.lte => @date, :fields => [:id, :name, :client_group_id, :center_id])
      - atts = Attendance.all(:client_id => clients.map{|x| x.id}, :date => @date).map{|x| [x.client_id,x]}.to_hash
      - loans = @loans||Loan.all(:client_id => clients.map{|x| x.id})
      - lids = loans.map{|x| x.id}
      - if lids.empty?
        - histories = []
      - else
        - histories = LoanHistory.all(:loan_id => lids, :date => @date)
        - histories += (lids - histories.aggregate(:loan_id)).map{|lid| Loan.get(lid).loan_history.last}.compact.select{|lh| lh.date < @date}
      - all_repayment_style_choices = [[NORMAL_REPAYMENT_STYLE,"fees=>int=>prin"], [PRORATA_REPAYMENT_STYLE,"pro rata"]]
      - default_repayment_style = Mfi.first.default_repayment_style ? Mfi.first.default_repayment_style : NORMAL_REPAYMENT_STYLE
      - default_repayment_style_choice = all_repayment_style_choices.select {|style| style[0] == default_repayment_style}
      - repayment_style_choices = Mfi.first.allow_choice_of_repayment_style ? default_repayment_style_choice + (all_repayment_style_choices.reject {|style| style[0] == default_repayment_style}) : default_repayment_style_choice
      - clients.group_by{|x| x.client_group}.sort_by{|x| x[0] ? x[0].name : "none"}.each do |group, clients_grouped|
        %tr.group{:style => 'font-weight: bold; text-align: center; background: grey'}
          %td{:colspan => 12}
            =group ? group.name : "none"
        -clients_grouped.sort_by{|x| x.name}.each do |client|
          - loan_row_count = 0
          - loans.find_all{|l| l.client_id == client.id and l.disbursal_date}.each do |loan|
            - lh = histories.find_all{|x| x.loan_id==loan.id}.sort_by{|x| x.created_at}[-1]
            - next if not lh
            - next if LOANS_NOT_PAYABLE.include? lh.status
            - loan_row_count += 1
            - if lh
              - if lh.total_principal_due > 0
                - p = lh.total_principal_due - lh.total_principal_paid
                - i = lh.total_interest_due - lh.total_interest_paid
              - else
                - p = [lh.principal_due, 0].max
                - i = [lh.interest_due,0].max
            - else
              - p = 0
              - i = 0

            %tr{ :class => cycle('odd','even') }
              %td.text
                %b= link_to client.name, resource(@branch, @center, client)
              %td.number
                = link_to loan.id, url_for_loan(loan)
              %td.number
                - amt = loan.amount
                %b= amt.to_currency
                - tot_amount += amt
              %td.number
                - prin = lh.nil? ? 0 : lh.actual_outstanding_principal
                %b= prin.to_currency
                - tot_outstanding += prin
              %td.text
                = loan.disbursal_date.to_s
              %td.number
                - ins = loan.number_of_installments_before(@date)
                = ins
                - tot_installments += ins
              %td.number
                = p.round(2)
                - tot_principal += p
              %td.number
                = i.round(2)
                - tot_interest += i
              %td.number
                - a = p + i
                = a.round(2)
                - tot_total += a
              %td.paid
                - if a > 0.01
                  = text_field :name => "paid[loan][#{loan.id}]", :value => [a,0].max.round(2), :cols => "5", :style => "width:50px;" 
                - else
                  = lh.principal_paid + lh.interest_paid
              %td 
                = select :name => "payment_style[#{loan.id}]", :collection => repayment_style_choices
              %td
                - att = atts[client.id]
                = select :name => "attendance[#{client.id}]", :collection => Attendance.attendancy_states, :value_method => :to_s, :selected => (att ? att.status.to_s : "present")
          - if loan_row_count == 0
            %tr{ :class => cycle('odd','') }
              %td.text
                %b= link_to client.name, resource(@branch, @center, client)
              %td{ :colspan => 10 }
                %i nothing outstanding
              %td
                - att = atts[client.id]
                = select :name => "attendance[#{client.id}]", :collection => Attendance.attendancy_states, :value_method => :to_s, :selected => (att ? att.status.to_s : "present")

      %tr{ :style => 'border-bottom: 2px solid;' }
        %tr
          %td
          %td
          %td.numeric
            %b= tot_amount.to_currency
          %td.numeric
            %b= tot_outstanding.to_currency
          %td
          %td
          %td.numeric
            %b= tot_principal.to_currency
          %td.numeric
            %b= tot_interest.to_currency
          %td
            %b= tot_total.to_currency
          %td
          %td.numeric            
    %tfoot    
      %tr
        %td{ :colspan => 14 }
- else
  %i This day is not a meeting day
