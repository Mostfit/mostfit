.box
  %fieldset
    %legend Loan Utilization
    = form_for(:loan, :class => "_remote_", :action => url(:controller => :loans, :action => :update_utilization, :id => @loan.id), :method => "POST") do
      %h3 Update Loan Utilization
      = select :loan_utilization_id, :collection => LoanUtilization.all.map{|lu| [lu.id, lu.name]}, :include_blank => true
      = submit "Save"

- if session.user.role == :admin
  .box
    %fieldset
      %legend Manipulate Loan Schedule
      = link_to("Repair history", url(:controller => "loans", :id => @loan.id, :action => "repair"), :class => "grey_button")
      = form_for(@loan, :action => url(:controller => "loans", :id => @loan.id, :action => "reallocate"), :class => "") do
        = submit 'Reallocate loans with style', :class => "grey_button", :style => "margin: 4px"
        = repayment_style_select

- if @loan.status == :outstanding    
  .box
    %fieldset
      %legend Pay
      = link_to("Prepay This Loan",  url(:prepay_loan, @loan.id), :class => "_remote_ grey_button")

      - if [:admin, :mis_manager].include?(session.user.role)
        .box
          %fieldset
            %legend Levy Penalty/Fee
            = partial "applicable_fees/form", :layout => false

  .box
    %fieldset
      %legend Applicable fees
      - if @loan.applicable_fees.empty?
        = form_for(@loan, :action => url(:controller => 'loans', :action => 'levy_fees', :id => @loan.id)) do
          = submit 'Apply Fees'
      = partial "applicable_fees/list", :layout => false, :applicable_fees => @loan.applicable_fees, :return_url => url_for_loan(@loan) + "#misc"
  .box
    %fieldset
      %legend Values
      %table.tall
        %tr
          %th
            Branch
          %td
            = @loan.c_branch_id
        %tr
          %th
            Center
          %td
            = @loan.c_center_id
        %tr
          %th
            Scheduled Maturity Date
          %td
            = @loan.c_scheduled_maturity_date
        %tr
          %th
            Branch
          %td
            = @loan.c_branch_id
- if session.user.role==:admin
  .box
    %fieldset
      %legend Write Off Loan
      = form_for(@loan, :action => url(:action => :write_off, :id => @loan.id), :method => "POST", :class => "_disable_button_") do
        %table.tall.shaded
          %tr
            %th
              Write off Date : 
            %td
              = date_select_for @loan, :written_off_on
          %tr
            %th
              Select Staff Member :
            %td
              - center = @client.center
              - branch = center.branch
              = select :written_off_by_staff_id, :id => "written_off_by_staff_id", :collection => [branch.manager, center.manager].uniq.map{|m| [m.id, m.name]}, :prompt => "select staff member"
              %br
              %span.greytext 
                Pick the staff member who is writing off the loan
          %tr
            %td{:colspan => "2"}
              = submit "Write off"
- elsif staff_member = session.user.staff_member
  = form_for(@loan, :action => url(:action => :suggest_write_off, :id => @loan.id), :method => "POST", :class => "_disable_button_") do
    %table
      %tr
        %td
          %b Suggest to Write Off this Loan
      %tr
        %td
          suggested write off Date :
        %td
          = date_select_for @loan, :suggested_written_off_on
      %tr
        %td
          Suggested by staff member :
        %td
          = staff_member.name
        %td
      %tr
        %td
          = submit "Send suggestion"
  

