#journals_container
  %form{:class => "_remote_", :method => "GET", :action => url(:controller => :journals, :action => :index)}
    %b From
    - today = Date.today
    = date_select :from_date, (params[:from_date] || today), :min_date => Date.min_date, :max_date => Date.today
    %b To
    = date_select :to_date, (params[:to_date] || today), :min_date => Date.min_date, :max_date => Date.today
    %b Voucher type
    = select :journal_type_id, :collection => JournalType.all.map{|x| [x.id, x.name]}, :prompt => "Select voucher type"
    %input{:type => :hidden, :name => "return", :value => params[:return]}
    %input{:type => :hidden, :name => "_target_", :value => "journals_container"}
    = submit "GO"  
  %table.report.nojs
    %thead
      %tr
        %th
          ID
        %th
          Created at
        %th
          Effective Date
        %th
          Journal Type
        %th
          Narration
        %th
          Account
        %th
          Debit
        %th
          Credit
    %tbody
      - journals.each do |journal|
        - count = 0
        - postings_count = journal.postings.count
        - journal.postings.each do |p|
          - unless count > 0
            %tr
              %td{:rowspan => postings_count}
                = link_to "#{journal.id}", resource(journal)
                %br
                = "Txn ID: (#{journal.transaction_id})" unless journal.transaction_id.empty? 
              %td{:rowspan => postings_count}
                = journal.created_at.strftime(Mfi.first.date_format + " at %H:%m") if journal.created_at and count == 0
              %td{:rowspan => postings_count}
                = journal.date.display if journal.date and count == 0
              %td{:rowspan => postings_count}
                = journal.journal_type.display
              %td{:rowspan => postings_count}
                = journal.comment
              %td
                = p.account.display_name unless p.account.nil?
              %td
                = p.amount.to_account_balance if p.amount && p.amount <= 0
              %td
                = p.amount.to_account_balance if p.amount && p.amount > 0
              - count += 1
          - else
            %tr
              %td
                = p.account.display_name unless p.account.nil?
              %td
                = p.amount.to_account_balance if p.amount && p.amount <= 0
              %td
                = p.amount.to_account_balance if p.amount && p.amount > 0
              - count += 1
