%div#eod_voucher_form
  = error_messages_for @journal
  
  = form_for(@journal, :action => url(:controller => :journals, :action => :create_eod), :class => "_remote_") do    
    %table.form.narrow.shaded
      %thead
        %tr
          %td
            %b Journal Type
          %td
            %b Action
          %td
            %b Credits
          %td
            %b Debits
      - debit_total, credit_total = 0, 0
      - if @branch
        = hidden_field :name => "branch_id", :value => @branch.id
        = hidden_field :name => "_target_", :value => "eod_voucher_form"
      - if @rules and @rules.length > 0
        - @rules.each do |rule|
          %tr{:class => cycle('odd','even')}
            %td
              = rule.journal_type.name
              = hidden_field :name => "credit_accounts[][journal_type_id]", :value => rule.journal_type.id
              = hidden_field :name => "debit_accounts[][journal_type_id]", :value => rule.journal_type.id
            %td
              %b= rule.action.camelcase(' ')
            %td
              - if rule.credit_account_rules and rule.credit_account_rules.length > 0
                %table{:style => "width: 100%"}
                  - rule.credit_account_rules.each_with_index do |ca, idx|
                    %tr
                      %td{:width => "80%"}
                        = ca.credit_account.name                  
                        = hidden_field :name => "credit_accounts[][account_id]", :value => ca.credit_account.id
                      %td
                        - debugger if ca.id == 103
                        - amount, changable = ca.amount(@date)
                        - credit_total += amount
                        - if false
                          = text_field :name => "credit_accounts[][amount]", :value => (amount || 0)
                        - else
                          = (amount || 0).to_currency
                          = hidden_field :name => "credit_accounts[][amount]", :value => (amount||0)
            %td
              - if rule.debit_account_rules and rule.debit_account_rules.length > 0
                %table{:style => "width: 100%"}
                  - rule.debit_account_rules.each_with_index do |da, idx|
                    %tr
                      %td
                        = da.debit_account.name
                        = hidden_field :name => "debit_accounts[][account_id]", :value => da.debit_account.id
                      %td
                        - amount, changable = da.amount(@date)
                        - debit_total += amount
                        - if false
                          = text_field :name => "debit_accounts[][amount]", :value => (amount || 0)
                        - else
                          = (amount || 0).to_currency
                          = hidden_field :name => "debit_accounts[][amount]", :value => (amount||0)
      %tr.total
        %td
        %td
          %b Total
        %td
          %b= credit_total.to_currency
        %td
          %b= debit_total.to_currency
      %tr
        %td
          Date
        %td
          = date_select_for @journal, :date, {:date => @date}
      %tr
        %td
          Comment
        %td
          = text_field :comment, :value => (@journal.comment || "EOD voucher entry for #{@date}")
      %tr
        %td
          Transaction ID
        %td
          = text_field :transaction_id, :value => "#{(@date||Date.today).strftime('%Y-%m-%d')}-#{@branch.id}"
      %tr
        %td
          = submit "Create"

