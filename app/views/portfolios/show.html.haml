%h1
  Portfolio: 
  = @portfolio.name
%table.narrow.form{ :style => "width: 40%;" }
  %tr.odd
    %td Name
    %td
      = @portfolio.name
  %tr
    %td Number of loans
    %td
      - if @portfolio.portfolio_loans.count > 0
        %b= @portfolio.loans.count
      -else
        0  
  %tr.odd
    %td Starting value
    %td
      = @portfolio.start_value
  %tr
    %td Present value
    %td
      = @portfolio.outstanding_value
  %tr.odd
    %td Last payment
    %td
      = @portfolio.last_payment_date
  %tr
    %td
      Created on
    %td
      = @portfolio.created_at.strftime(Mfi.first.date_format)

%table.report
  %tr.header
    %th
      Loan ID
    %th
      Amount
    %th
      Disbursed on
    %th
      Added to portfolio
    %th
      Starting balance
    %th
      Current balance
    %th
      Payments
  - length = 7
  - org_total = []
  - @portfolio.portfolio_loans.group_by{|pf| pf.loan.client.center}.sort_by{|center, pf| center.name}.each do |center, portfolio_loans|
    %tr.branch#loan
      %td{:colspan => length}
        %b= center.name
        (
        = center.branch.name
        )
    - center_total = [0, 0, 0, 0, 0]
    - portfolio_loans.each do |pf|
      %tr.loan
        %td
          = link_to(pf.loan_id, "/loans/#{pf.loan_id}", {:target => "BLANK", :class => "link"})
          - center_total[0]+= 1
        %td
          = pf.loan.amount
          - center_total[1]+= pf.loan.amount
        %td
          = pf.loan.disbursal_date
        %td
          = pf.added_on
        %td
          = pf.starting_value
          - center_total[2]+= pf.starting_value
        %td
          = pf.current_value
          - center_total[3]+= pf.current_value
        %td
          = pf.starting_value - pf.current_value
          - center_total[4]+= pf.starting_value - pf.current_value
    %tr.branch_total
      - center_total.each_with_index do |ele, idx|
        - if idx == 2
          %td
          %td
        %td
          = ele.to_currency
    - org_total << center_total
  %tr.org_total
    - org_total.transpose.collect{|arr| arr.reduce{|s, x| s+=x}}.each_with_index do |ele, idx|
      - if idx == 2
        %td
        %td
      - if idx == 0
        %td.center
          %b= ele.to_currency
      - else
        %td        
          %b= ele.to_currency
  
= link_to 'edit', resource(@funder, @portfolio, :edit), :class => "edit"
|
= link_to 'Back', url(@funder)
