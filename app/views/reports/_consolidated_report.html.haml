=partial :form
%table.report
  %tr.header
    %th
      Center
    %th{:colspan => "3"}
      Loan amount
    %th{:colspan => "4"}
      Payment
    %th{:colspan => "3"}
      Balance outstanding
    %th{:colspan => "3"}
      Balance Overdue
    %th{:colspan => "3"}
      Advance payment
  %tr.header
    %th
    %th
      Applied
    %th
      Sanctioned
    %th
      Disbursed
    %th
      Principal
    %th
      Interest
    %th
      Fee
    %th
      Total
    %th
      Principal
    %th
      Interest
    %th
      Total
    %th
      Principal
    %th
      Interest
    %th
      Total
    %th
      Principal
    %th
      Interest
    %th
      Total
  - center_id, branch_id = nil, nil
  - length = 16
  - org_total = []
  -@data.sort_by{|branch, x| branch.name}.each do |branch, centers|
    -if centers.keys.length>0
      -branch_total = Array.new(length, 0)
      %tr.branch
        %td{:colspan => length+1}
          %b
            =branch.name
      -centers.sort_by{|center, data| center.name}.each do |center, data|
        -if data.length>0
          %tr.center
            %td
              %b
                =center.name
            -data.each_with_index do |d, idx|
              %td                
                -if idx==6
                  = (data[3]+data[4]+data[5]).to_i
                  -branch_total[6]+= (data[3]+data[4]+data[5]).to_i
                -else
                  =d.to_i
                  -branch_total[idx]+=d.to_i
      %tr.branch_total
        %td
          %b==Branch total:
        - org_total << branch_total
        - branch_total.each do |ele|
          %td
            %b
              =ele.to_i
  %tr.org_total
    %td
      %b==Total
    -org_total.find_all{|x| x.length==length}.transpose.collect{|arr| arr.reduce{|s, x| s+=x}}.each do |ele|
      %td
        %b
          =ele.to_i

