=partial :form
%table.report#branch
  %tr.header
    %th
      Group
    %th{:colspan => "2"}
      Disbursal scheduled
    %th{:colspan => "4"}
      Repayment scheduled
    %th{:colspan => "4"}
      Balance outstanding
  %tr.header
    %th
    %th
      Applied
    %th
      Sanctioned
    %th
      Principal
    %th
      Interest
    %th
      Fee
    %th
      Total
    %th
      Principal
    %th
      Interest
    %th
      Fee
    %th
      Total
  - center_id, branch_id = nil, nil
  - length = 10
  - org_total = []
  -@data.sort_by{|branch, dates| branch.name}.each do |branch, dates|
    -if dates.keys.length>0
      -branch_total = []
      %tr.branch#transaction_date
        %td{:colspan => length+1}
          %b
            =branch.name
      -dates.sort_by{|date, centers| date}.each do |date, centers|
        -if centers.keys.length>0
          %tr.transaction_date#center
            %td{:colspan => length+1}
              %b
                =date
          -date_total = Array.new(length, 0)
          -centers.sort_by{|center, data| center.name}.each do |center, data|
            %tr.center
              %td
                =center.name
              -data.each_with_index do |d, idx|
                %td
                  = d
                  -date_total[idx]+=d
          %tr.transaction_date_total
            %td
              %b==Date total:
              -branch_total.push(date_total)
            -date_total.each do |ele|
              %td
                %b
                  =ele
      %tr.branch_total
        %td
          %b==Branch total:
        - org_total << branch_total.transpose.collect{|arr| arr.reduce{|s, x| s+=x}}
        -org_total.last.each do |ele|
          %td
            %b
              =ele
  %tr.org_total
    %td
      %b==Total:
    -org_total.find_all{|x| x.length==length}.transpose.collect{|arr| arr.reduce{|s, x| s+=x}}.each do |ele|
      %td
        %b
          =ele

