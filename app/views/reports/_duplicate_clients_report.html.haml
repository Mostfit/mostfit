%b
  Total Duplicates = 
  - @data = Marshal.load(@report.report)
  - cids=[]
  - @data.inject({}){|s,x| s+=x}.values.flatten.each_with_index{|x,idx| cids << x if idx%5==0}
  - clients = Client.all(:id => cids, :fields => [:id, :center_id])
  = clients.length/2
%br

%table.report.nojs
  %tr
    %th
      ID
    %th
      Name
    %th
      Spouse Name
    %th
      Date of birth
    %th
      Center Name
    %th
      Branch Name
    %th
      Other Details

  - @data.each do |reasons|
    - reasons.each do |reason, dups|
      - next if dups.length==0
      %tr.branch
        %td{:colspan => "7"}
          %b
            =reason.to_s.camelcase(' ').gsub("Same", "Same/Similar").gsub("Dob", "Date of Birth")
      - case_number = 1
      - dups.each do |dup1, dup2|
        %tr.center
          %td{:colspan => "7"}
            %b= "Case #{case_number}"
            - case_number += 1
        -client1 = clients.find{|x| x.id==dup1[0]}
        -client2 = clients.find{|x| x.id==dup2[0]}
        %tr
          %td
            =link_to(dup1[0], resource(client1))
          %td
            =dup1[1]
          %td
            =dup1[2]
          %td
            =dup1[3]
          %td
            =client1.center.name
          %td
            =client1.center.branch.name
          %td
            =dup1[4]
        %tr
          %td
            =link_to(dup2[0], resource(client2))
          %td
            =dup2[1]
          %td
            =dup2[2]
          %td
            =dup2[3]
          %td
            =client2.center.name
          %td
            =client2.center.branch.name
          %td
            =dup1[4]
          