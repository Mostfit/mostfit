#ledger_entry_table
  %form{:style => "float : right", :method => "post", :action => url(:controller => :accounts, :action => :book, :account_id => @account.id, :date => (params[:date] || Date.today)), :class => "_remote_"}
    %b Show ledger for accounting period 
    = select :accounting_period_id, :collection => AccountingPeriod.all.reverse.map{|ap| [ap.id, ap.name]}
    = hidden_field :name => "_target_", :value => "ledger_entry_table"
    = submit "GO"

  %b Ledger entries for - 
  = @accounting_period.name
  %table.form.narrow
    %tr.total
      %td
        Opening Balance
        %span.greytext
          [
          = @from_date
          ]
        \=
        = @account.opening_balance_as_of(@from_date).to_account_balance
      %td
        Closing Balance
        %span.greytext
          [
          = @to_date
          ] 
        \=
        = @account.opening_balance_as_of(@to_date).to_account_balance
  
  %table.form.narrow
    %tr
      %thead
        %th
          Date
        %th
          Particulars
        %th
          Voucher Type
        %th
          Voucher Number
        %th
          %b Debit
        %th
          %b Credit
    - @posting_array = @posting_hash.map{|p| [p.journal.date, p]}
    - @posting_array.sort_by{|pa| pa[0]}.reverse.each do |pa|
      %tr{:class => cycle('odd','even')}
        - posting = pa[1]
        %td
          = pa[0]
        %td
          = posting.journal.comment
        %td
          = posting.journal.journal_type.name
        %td
          = posting.journal.transaction_id
        %td
          = posting.amount < 0 ? posting.amount.abs.to_currency : "-"
        %td
          = posting.amount > 0 ? posting.amount.to_currency : "-"
  = paginate(@posting_hash).to_s.gsub("<a", "<a class='_remote_' id='ledger_entry_table'")
