- if @accounting_periods.empty?
  #container_form
    .notice{:style => "background: none; text-align: center;"} 
      There are no accounting periods defined
      = link_to 'Add an Accounting Period', url(:new_accounting_period), :class => '_remote_ add', :id => 'form'

- else
  = link_to 'Add an accounting period', url(:new_accounting_period), :class => "_remote_ add"
  %br
  %br
  %table.narrow.form
    - closeAP = AccountingPeriod.all(:closed => false, :order => [:begin_date.asc])
    - reopenAP = AccountingPeriod.all(:closed => true, :order => [:begin_date.asc])
    %thead
      %tr
        %th
          Name
        %th
          Begins
        %th
          Ends
        %th
          Entries Allowed?
        %th
          Account balances
        %th
          Actions
    - for accounting_period in @accounting_periods.sort
      %tr{:class => cycle('odd','even')}
        %td
          = link_to accounting_period.name, resource(accounting_period)
        %td
          = accounting_period.begin_date
        %td
          = accounting_period.end_date
        %td
          = accounting_period.closed ? "Closed" : "Open"
        %td
          = link_to 'Balances', url(:period_balances, accounting_period)
        %td
          - if session.user.role == :admin
            - if (not reopenAP.empty?) and  accounting_period.id. == reopenAP.last.id
              = link_to 'Reopen' , url(:close_accounting_period, {:id => accounting_period.id})
            - elsif (not closeAP.empty?) and accounting_period.id == closeAP.first.id
              = link_to 'Close' , url(:close_accounting_period, {:id => accounting_period.id})
            - elsif closeAP.map{|cap| cap.id}.include?(accounting_period.id)
              %span{:class => 'red'}
                = 'Cannot close'
            - elsif reopenAP.map{|roap| roap.id}.include?(accounting_period.id)
              %span{:class => 'green'}
                = 'Cannot reopen'
